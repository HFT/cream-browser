#!/bin/sh

TOPDIR="`pwd`"
PREFIX="/usr/local"
EXEC_PREFIX="$PREFIX"
SYSCONFDIR="$PREFIX/etc"
BINDIR="$PREFIX/bin"
LIBDIR="$PREFIX/lib"
DATADIR="$PREFIX/share"
LOCALEDIR="$DATADIR/locale"
MANDIR="$PREFIX/man"
INFODIR="$DATADIR/info"

rm -f common.mk.sed

for arg
do
     case $arg in
          *=*) optarg=${arg#*=} ;;
          *)   optarg=        ;;
     esac

     case $arg in
          --prefix=*)      PREFIX=$optarg      ;;
          --exec-prefix=*) EXEC_PREFIX=$optarg ;;
          --sysconfdir=*)  SYSCONFDIR=$optarg  ;;
          --bindir=*)      BINDIR=$optarg      ;;
          --libdir=*)      LIBDIR=$optarg      ;;
          --datadir=*)     DATADIR=$optarg     ;;
          --localedir=*)   LOCALEDIR=$optarg   ;;
          --mandir=*)      MANDIR=$optarg      ;;
          --infodir=*)     INFODIR=$optarg     ;;

          --enable-*)
               option=`echo $arg | sed -e 's/--enable-//' -e 's/=.*//'`
               option=`echo $option | sed 's/-/_/g'`

               case "$arg" in
                    *=*) eval "enable_${option}='$optarg'" ;;
                    *)   eval "enable_${option}=yes"       ;;
               esac
               ;;

          --disable-*)
               option=`echo $arg | sed -e 's/--disable-//' -e 's/=.*//'`
               option=`echo $option | sed 's/-/_/g'`
               eval "enable_${option}=no"
               ;;

          --with-*)
               option=`echo $arg | sed -e 's/--with-//' -e 's/=.*//'`
               option=`echo $option | sed 's/-/_/g'`

               case "$arg" in
                    *=*) eval "with_${option}='$optarg'" ;;
                    *)   eval "with_${option}=yes"       ;;
               esac
               ;;

          --without-*)
               option=`echo $arg | sed -e 's/--without-//' -e 's/=.*//'`
               option=`echo $option | sed 's/-/_/g'`
               eval "with_${option}=no"
               ;;

          --help | *)
               echo "Usage: ./configure [options]"
               echo
               echo "Standard build options:"
               echo "    --prefix=DIR              Installation base (MI files) [/usr/local]"
               echo "    --exec-prefix=DIR         Installation base (MD files) [PREFIX]"
               echo "    --sysconfdir=DIR          System configuration files [PREFIX/etc]"
               echo "    --bindir=DIR              Executables (for common users) [PREFIX/bin]"
               echo "    --libdir=DIR              System libraries [PREFIX/lib]"
               echo "    --datadir=DIR             Data files (for programs) [PREFIX/share]"
               echo "    --localedir=DIR           Multi-language support locales [DATADIR/locale]"
               echo "    --mandir=DIR              Manual page documentation [PREFIX/man]"
               echo "    --infodir=DIR             Texinfo documentation [DATADIR/info]"
               echo
               echo "    --enable-debug            Compile in debug mode [no]"
               echo "    --enable-PACKAGE          Enable PACKAGE suport."
               echo "    --disbale-PACKAGE         Disable PACKAGE support."
               echo "    --with-OPTION             Build with OPTION enabled."
               echo "    --without-OPTION          Build with OPTION disabled."

               exit
               ;;
     esac
done

. ./project.conf

echo "$PACKAGE $VERSION, released under $LICENSE license."

ARCH=`uname -m`
echo -n "-- Building on $ARCH "
if [ "${enable_debug}" = "yes" ]; then
     echo "in debug mode"
     CFLAGS="-g -ggdb3 -fno-inline -Wall -Wstrict-prototypes -Wpointer-arith -Wno-sign-compare -O2 -I $TOPDIR/ "
     HAVE_DEBUG="1"
else
     echo "in release mode"
     CFLAGS="-Wall -O2 -I $TOPDIR/ "
     HAVE_DEBUG="0"
fi
LDFLAGS=""

# Check CC
if [ "x$CC" = "x" ]; then
     CC="cc"
fi

echo -n "-- Checking for compiler ($CC) ... "
compiler=`which $CC 2>&1`
if [ "$?" = "1" ]; then
     echo "no" && echo "$compiler" && exit 1
else
     echo "yes"
fi

# Check pkg-config
echo -n "-- Checking for pkg-config ... "
PKGCONFIG=`which pkg-config 2>&1`
if [ "$?" = "1" ]; then
     echo "no" && echo "$PKGCONFIG" && exit 1
else
     echo "yes"
fi

# Check sed
echo -n "-- Checking for sed ... "
SED=`which sed 2>&1`
if [ "$?" = "1" ]; then
     echo "no" && echo "$SED" && exit 1
else
     echo "yes"
fi

# Check libraries
for lib in $LIBRARIES
do
     echo -n "-- Checking for library $lib ... "
     LIB_VERSION=`$PKGCONFIG --modversion $lib 2>&1`
     if [ "$?" = "1" ]; then
          echo "no" && echo "$LIB_VERSION" && exit 1
     else
          CFLAGS+=`$PKGCONFIG --cflags $lib`
          LDFLAGS+=`$PKGCONFIG --libs $lib`
          echo "$LIB_VERSION"
          echo "s:@${lib}_version@:$LIB_VERSION:" >> common.mk.sed
     fi
done

# -- common.mk
echo "
s:@PACKAGE@:$PACKAGE:
s:@VERSION@:$VERSION:
s:@LICENSE@:$LICENSE:
s:@TOPDIR@:$TOPDIR:
s:@PREFIX@:$PREFIX:
s:@EXEC_PREFIX@:$EXEC_PREFIX:
s:@SYSCONFDIR@:$SYSCONFDIR:
s:@BINDIR@:$BINDIR:
s:@LIBDIR@:$LIBDIR:
s:@DATADIR@:$DATADIR:
s:@LOCALEDIR@:$LOCALEDIR:
s:@MANDIR@:$MANDIR:
s:@INFODIR@:$INFODIR:
s:@CC@:$compiler:
s:@CFLAGS@:$CFLAGS:
s:@LDFLAGS@:$LDFLAGS:
s:@ARCH@:$ARCH:
s:@HAVE_DEBUG@:$HAVE_DEBUG:
s:@.*@::" >> common.mk.sed

$SED -f common.mk.sed common.mk.in > common.mk

if [ "$?" = "1" ]; then
     echo " * Failed to generate common.mk" && exit 1
else
     echo "Generated common.mk"
fi

