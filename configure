#!/bin/sh

TOPDIR=`dirname $0`

for arg
do
     case $arg in
          *=*) optarg=${arg#*=} ;;
          *)   optarg=          ;;
     esac

     case $arg in
          --build=*)  BUILD=$optarg  ;;
          --host=*)   HOST=$optarg   ;;
          --target=*) TARGET=$optarg ;;

          --prefix=*)      PREFIX=$optarg      ;;
          --exec-prefix=*) EXEC_PREFIX=$optarg ;;
          --sysconfdir=*)  SYSCONFDIR=$optarg  ;;
          --bindir=*)      BINDIR=$optarg      ;;
          --libdir=*)      LIBDIR=$optarg      ;;
          --datadir=*)     DATADIR=$optarg     ;;
          --localedir=*)   LOCALEDIR=$optarg   ;;
          --mandir=*)      MANDIR=$optarg      ;;
          --infodir=*)     INFODIR=$optarg     ;;

          --enable-*)
               option=`echo $arg | sed -e 's/--enable-//' -e 's/=.*//'`
               option=`echo $option | sed 's/-/_/g'`

               case "$arg" in
                    *=*) eval "enable_${option}='$optarg'" ;;
                    *)   eval "enable_${option}=yes"       ;;
               esac
               ;;

          --disable-*)
               option=`echo $arg | sed -e 's/--disable-//' -e 's/=.*//'`
               option=`echo $option | sed 's/-/_/g'`
               eval "enable_${option}=no"
               ;;

          --with-*)
               option=`echo $arg | sed -e 's/--with-//' -e 's/=.*//'`
               option=`echo $option | sed 's/-/_/g'`

               case "$arg" in
                    *=*) eval "with_${option}='$optarg'" ;;
                    *)   eval "with_${option}=yes"       ;;
               esac
               ;;

          --without-*)
               option=`echo $arg | sed -e 's/--without-//' -e 's/=.*//'`
               option=`echo $option | sed 's/-/_/g'`
               eval "with_${option}=no"
               ;;

          --help | *)
               echo "Usage: ./configure [options]"
               echo
               echo "Standard build options:"
               echo "    --build=STRING            Host environment for build [auto-detect]"
               echo "    --host=STRING             Cross-compile for target environment [BUILD]"
               echo
               echo "    --prefix=DIR              Installation base (MI files) [/usr/local]"
               echo "    --exec-prefix=DIR         Installation base (MD files) [PREFIX]"
               echo "    --sysconfdir=DIR          System configuration files [PREFIX/etc]"
               echo "    --bindir=DIR              Executables (for common users) [PREFIX/bin]"
               echo "    --libdir=DIR              System libraries [PREFIX/lib]"
               echo "    --datadir=DIR             Data files (for programs) [PREFIX/share]"
               echo "    --localedir=DIR           Multi-language support locales [DATADIR/locale]"
               echo "    --mandir=DIR              Manual page documentation [PREFIX/man]"
               echo "    --infodir=DIR             Texinfo documentation [DATADIR/info]"
               echo
               echo "    --enable-debug            Compile in debug mode [no]"
               echo "    --enable-PACKAGE          Enable PACKAGE suport."
               echo "    --disbale-PACKAGE         Disable PACKAGE support."
               echo "    --with-OPTION             Build with OPTION enabled."
               echo "    --without-OPTION          Build with OPTION disabled."

               exit
               ;;
     esac
done

# Installation prefix
[ "x$PREFIX" = "x" ]          && PREFIX="/usr/local"
[ "x$EXEC_PREFIX" = "x" ]     && EXEC_PREFIX="$PREFIX"
[ "x$SYSCONFDIR" = "x" ]      && SYSCONFDIR="$PREFIX/etc"
[ "x$BINDIR" = "x" ]          && BINDIR="$PREFIX/bin"
[ "x$LIBDIR" = "x" ]          && LIBDIR="$PREFIX/lib"
[ "x$DATADIR" = "x" ]         && DATADIR="$PREFIX/share"
[ "x$LOCALEDIR" = "x" ]       && LOCALEDIR="$DATADIR/locale"
[ "x$MANDIR" = "x" ]          && MANDIR="$PREFIX/man"
[ "x$INFODIR" = "x" ]         && INFODIR="$DATADIR/info"


CMAKE_OPTS="$CMAKE_OPTS -DCMAKE_INSTALL_PREFIX=$PREFIX"
CMAKE_OPTS="$CMAKE_OPTS -DCMAKE_INSTALL_EXEC_PREFIX=$EXEC_PREFIX"
CMAKE_OPTS="$CMAKE_OPTS-DCMAKE_INSTALL_SYSCONFDIR=$SYSCONFDIR"
CMAKE_OPTS="$CMAKE_OPTS-DCMAKE_INSTALL_BINDIR=$BINDIR"
CMAKE_OPTS="$CMAKE_OPTS-DCMAKE_INSTALL_LIBDIR=$LIBDIR"
CMAKE_OPTS="$CMAKE_OPTS-DCMAKE_INSTALL_DATADIR=$DATADIR"
CMAKE_OPTS="$CMAKE_OPTS-DCMAKE_INSTALL_LOCALEDIR=$LOCALEDIR"
CMAKE_OPTS="$CMAKE_OPTS-DCMAKE_INSTALL_MANDIR=$MANDIR"
CMAKE_OPTS="$CMAKE_OPTS-DCMAKE_INSTALL_INFODIR=$INFODIR"

# Debug
if [ "${enable_debug}" = "yes" ]; then
     CMAKE_OPTS="$CMAKE_OPTS -DDEBUG=ON"
else
     CMAKE_OPTS="$CMAKE_OPTS -DDEBUG=OFF"
fi

# GTK
if [ "${with_gtk}" = "3.0" ]; then
     CMAKE_OPTS="$CMAKE_OPTS -DGTK3=ON"
else
     CMAKE_OPTS="$CMAKE_OPTS -DGTK3=OFF"
fi

if [ "${with_gtk_directfb}" = "yes" ]; then
     CMAKE_OPTS="$CMAKE_OPTS -DDIRECTFB=ON"
else
     CMAKE_OPTS="$CMAKE_OPTS -DDIRECTFB=OFF"
fi

# Modules
if [ "${enable_mod_dummy}" = "yes" ]; then
     CMAKE_OPTS="$CMAKE_OPTS -DENABLE_MOD_DUMMY=ON"
else
     CMAKE_OPTS="$CMAKE_OPTS -DENABLE_MOD_DUMMY=OFF"
fi

# Execute cmake
cmake $TOPDIR $CMAKE_OPTS
